PARAMETER FILE: onlineParameters.txt
Getting input file paths...
Getting topology file...
... ../4_Experiments/Outputs/Instances/1x/random/German_17_26/Links/50_demands/Link.csv
WARNING: Field 'initialMappingDemandFile=' is empty.
WARNING: Field 'initialMappingAssignmentFile=' is empty.
Getting GNPY parameters...
Getting Thesis Pedro parameters...
Getting formulation parameters...
Getting optimization parameters...
Getting execution parameters...
Populating online demand files...
Finish reading input.
TOPOLOGY FILE: ../4_Experiments/Outputs/Instances/1x/random/German_17_26/Links/50_demands/Link.csv
ROUTED DEMANDS FILE: 
INITIAL ASSIGNMENT FILE: 
All information from input is consistent.
> Number of online demand files: 1
--- READING INSTANCE... --- 
--- CREATING INITIAL MAPPING... --- 
Reading ../4_Experiments/Outputs/Instances/1x/random/German_17_26/Links/50_demands/Link.csv.
Creating edge #1. 1 -- 3. nb slices: 50, length: 160, cost: 0, amplis: 2, pnliC: 4.79635e-08, paseC: 3.94405e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #2. 1 -- 9. nb slices: 50, length: 313, cost: 0, amplis: 4, pnliC: 9.55127e-08, paseC: 7.2616e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #3. 2 -- 3. nb slices: 50, length: 124, cost: 0, amplis: 2, pnliC: 4.4826e-08, paseC: 1.66438e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #4. 2 -- 4. nb slices: 50, length: 288, cost: 0, amplis: 4, pnliC: 9.37378e-08, paseC: 5.3946e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #5. 2 -- 5. nb slices: 50, length: 159, cost: 0, amplis: 2, pnliC: 4.7906e-08, paseC: 3.85196e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #6. 3 -- 5. nb slices: 50, length: 132, cost: 0, amplis: 2, pnliC: 4.57517e-08, paseC: 2.02158e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #7. 4 -- 5. nb slices: 50, length: 291, cost: 0, amplis: 4, pnliC: 9.39777e-08, paseC: 5.59132e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #8. 4 -- 10. nb slices: 50, length: 195, cost: 0, amplis: 3, pnliC: 6.83027e-08, paseC: 2.88903e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #9. 5 -- 9. nb slices: 50, length: 183, cost: 0, amplis: 3, pnliC: 6.68526e-08, paseC: 2.37734e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #10. 5 -- 10. nb slices: 50, length: 264, cost: 0, amplis: 4, pnliC: 9.15033e-08, paseC: 4.04315e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #11. 5 -- 11. nb slices: 50, length: 352, cost: 0, amplis: 5, pnliC: 1.16498e-07, paseC: 6.2462e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #12. 6 -- 7. nb slices: 50, length: 35, cost: 0, amplis: 1, pnliC: 1.61686e-08, paseC: 2.03849e-08, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #13. 6 -- 9. nb slices: 50, length: 37, cost: 0, amplis: 1, pnliC: 1.68856e-08, paseC: 2.28418e-08, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #14. 7 -- 8. nb slices: 50, length: 42, cost: 0, amplis: 1, pnliC: 1.8466e-08, paseC: 3.00717e-08, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #15. 8 -- 9. nb slices: 50, length: 95, cost: 0, amplis: 2, pnliC: 3.97774e-08, paseC: 8.04091e-08, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #16. 8 -- 11. nb slices: 50, length: 194, cost: 0, amplis: 3, pnliC: 6.81912e-08, paseC: 2.84269e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #17. 10 -- 11. nb slices: 50, length: 393, cost: 0, amplis: 5, pnliC: 1.19498e-07, paseC: 9.22862e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #18. 10 -- 13. nb slices: 50, length: 281, cost: 0, amplis: 4, pnliC: 9.31459e-08, paseC: 4.96117e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #19. 11 -- 12. nb slices: 50, length: 79, cost: 0, amplis: 1, pnliC: 2.39236e-08, paseC: 1.88098e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #20. 11 -- 13. nb slices: 50, length: 225, cost: 0, amplis: 3, pnliC: 7.09886e-08, paseC: 4.66795e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #21. 12 -- 14. nb slices: 50, length: 66, cost: 0, amplis: 1, pnliC: 2.28758e-08, paseC: 1.01079e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #22. 13 -- 15. nb slices: 50, length: 208, cost: 0, amplis: 3, pnliC: 6.96129e-08, paseC: 3.56077e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #23. 13 -- 17. nb slices: 50, length: 166, cost: 0, amplis: 3, pnliC: 6.43208e-08, paseC: 1.79628e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #24. 14 -- 15. nb slices: 50, length: 80, cost: 0, amplis: 1, pnliC: 2.39818e-08, paseC: 1.97203e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #25. 15 -- 16. nb slices: 50, length: 92, cost: 0, amplis: 2, pnliC: 3.90616e-08, paseC: 7.43638e-08, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Creating edge #26. 16 -- 17. nb slices: 50, length: 156, cost: 0, amplis: 2, pnliC: 4.77254e-08, paseC: 3.58807e-07, pnliL: 0, paseL: 0, pnliS: 0, paseS: 0
Starting with an empty initial mapping. 
0 are present in the initial mapping.
--- READING NEW DEMANDS TO BE ROUTED... --- 
Reading ../4_Experiments/Outputs/Instances/1x/random/German_17_26/Demands/50_demands/demands_1.csv ...

--- The Non Routed Demands ---
#1. 6 -- 17. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#2. 15 -- 13. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#3. 14 -- 1. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#4. 12 -- 10. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#5. 10 -- 16. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#6. 17 -- 13. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#7. 17 -- 7. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#8. 12 -- 9. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#9. 11 -- 14. nbSlices: 6, maxLength: 2500, osnrLimit: 16, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#10. 10 -- 2. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#11. 3 -- 11. nbSlices: 6, maxLength: 2500, osnrLimit: 16, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#12. 7 -- 3. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#13. 14 -- 12. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#14. 7 -- 3. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#15. 12 -- 8. nbSlices: 3, maxLength: 500, osnrLimit: 22, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#16. 15 -- 1. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#17. 17 -- 6. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#18. 11 -- 9. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#19. 16 -- 15. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#20. 16 -- 7. nbSlices: 6, maxLength: 2500, osnrLimit: 16, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#21. 9 -- 3. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#22. 6 -- 13. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#23. 5 -- 11. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#24. 12 -- 5. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#25. 11 -- 6. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#26. 1 -- 5. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#27. 8 -- 6. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#28. 11 -- 4. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#29. 5 -- 16. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#30. 4 -- 12. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#31. 1 -- 13. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#32. 15 -- 5. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#33. 14 -- 4. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#34. 6 -- 8. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#35. 9 -- 10. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#36. 4 -- 12. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#37. 11 -- 9. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#38. 8 -- 14. nbSlices: 3, maxLength: 5000, osnrLimit: 13, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#39. 1 -- 11. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#40. 14 -- 12. nbSlices: 6, maxLength: 2500, osnrLimit: 16, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#41. 14 -- 2. nbSlices: 6, maxLength: 2500, osnrLimit: 16, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#42. 8 -- 15. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#43. 1 -- 4. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#44. 12 -- 6. nbSlices: 3, maxLength: 2000, osnrLimit: 15, pchC: 0.000375, pchL: 0, pchS: 0, ROUTED: NO
#45. 14 -- 17. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#46. 13 -- 9. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#47. 7 -- 13. nbSlices: 6, maxLength: 2000, osnrLimit: 21, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#48. 5 -- 16. nbSlices: 6, maxLength: 2500, osnrLimit: 16, pchC: 0.00075, pchL: 0, pchS: 0, ROUTED: NO
#49. 17 -- 2. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO
#50. 5 -- 15. nbSlices: 4, maxLength: 1000, osnrLimit: 16, pchC: 0.0005, pchL: 0, pchS: 0, ROUTED: NO

50 demands to be routed.
Computing statistics of all paths
--- T-Flow formulation has been chosen. |K| = 50, |S| = 50. ---
T-Flow variables have been defined...
Origin constraints have been defined...
Target constraints have been defined...
Degree constraints have been defined...
Flow conservation constraints have been defined...
Length constraints have been defined...
OSNR constraints have been defined...
Max Used Slice Per Link constraints have been defined...
Max Used Slice Overall constraints have been defined...
Slice constraints have been defined...
Non Overlapping Shared Link constraints have been defined...
Constraints = 93100
C Band routing constraints have been defined...
Objective obj_2p has been defined.
--- T-flow formulation has been defined ---
--- CPLEX has been initialized ---
CPLEX parameters have been defined...
CPLEX variables have been defined...
CPLEX constraints have been defined...
CPLEX objective has been defined...
Solving...
Chosen objective: obj_2p
Version identifier: 22.1.1.0 | 2022-11-28 | 9160aff4d
CPXPARAM_Threads                                 2
CPXPARAM_MIP_Display                             3
CPXPARAM_TimeLimit                               50400
Legacy callback                                  i
Tried aggregator 2 times.
MIP Presolve eliminated 6941 rows and 96278 columns.
MIP Presolve modified 65159 coefficients.
Aggregator did 108 substitutions.
Reduced MIP has 90651 rows, 6616 columns, and 665926 nonzeros.
Reduced MIP has 5649 binaries, 1 generals, 0 SOSs, and 0 indicators.
Presolve time = 1.32 sec. (2212.21 ticks)
Probing time = 0.02 sec. (14.55 ticks)
Cover probing fixed 6 vars, tightened 0 bounds.
Tried aggregator 2 times.
Detecting symmetries...
MIP Presolve eliminated 133 rows and 18 columns.
Aggregator did 10 substitutions.
Reduced MIP has 90508 rows, 6588 columns, and 665191 nonzeros.
Reduced MIP has 5633 binaries, 1 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.41 sec. (502.85 ticks)
Probing fixed 4 vars, tightened 0 bounds.
Probing time = 0.04 sec. (95.85 ticks)
Clique table members: 1771.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 2 threads.
Root relaxation solution time = 0.61 sec. (474.20 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0      594.0000   167                    594.0000     1197         
      0     0      594.0000   100                 ZeroHalf: 2     1387         
      0     0      594.0000   131                   Cuts: 147     1544         
      0     0      594.0000    18                 ZeroHalf: 3     1883         
      0     0      594.0000    53                ZeroHalf: 26     2164         
      0     2      594.0000    14                    594.0000     2164         
Elapsed time = 31.65 sec. (24710.91 ticks, tree = 0.02 MB, solutions = 0)
      4     3      594.0000    16                    594.0000     2191         
      8     9      594.0000   149                    594.0000     3309         
     15    16      594.0000   106                    594.0000     4193         
     18    19      594.0000    50                    594.0000     4554         
     22    22      594.0000    70                    594.0000     5462         
     27    23      594.0000    79                    594.0000     5528         
     32    33      594.0000    44                    594.0000     6177         
     37    31      594.0000    58                    594.0000     6745         
     40    42      594.0000    60                    594.0000     7676         
     53    55      594.0000    54                    594.0000     9350         
Elapsed time = 37.31 sec. (28823.37 ticks, tree = 1.21 MB, solutions = 0)
     60    62      594.0000   110                    594.0000    10553         
     64    66      594.0000    58                    594.0000    11642         
     70    72      594.0000    66                    594.0000    12542         
     75    77      594.0000   242                    594.0000    13599         
     80    82      594.0000    71                    594.0000    15613         
     83    85      594.0000    77                    594.0000    16343         
     92    88      594.0000   171                    594.0000    23168         
     99    99      594.0000    76                    594.0000    24723         
    107   106      594.0000    85                    594.0000    25675         
    114   114      594.0000   172                    594.0000    27380         
Elapsed time = 55.31 sec. (40820.28 ticks, tree = 5.36 MB, solutions = 0)
    128   126      594.0000    58                    594.0000    27978         
    144   142      594.0000    76                    594.0000    30176         
    158   156      594.0000    70                    594.0000    31083         
    168   166      604.0000    89                    594.0000    32242         
    179   176      594.0000    50                    594.0000    32954         
    193   190      594.0000    59                    594.0000    34047         
    214   181      594.0000    66                    594.0000    33074         
    231   224      594.0000    30                    594.0000    37235         
    245   219      594.0000    51                    594.0000    36347         
    262   237      596.0000    90                    594.0000    39081         
Elapsed time = 66.04 sec. (50874.26 ticks, tree = 82.99 MB, solutions = 0)
    280   257      594.0000    50                    594.0000    39595         
*   291   262      integral     0      609.0000      594.0000    41505    2.46%
Found incumbent of value 609.000000 after 67.30 sec. (52252.76 ticks)
    298   264      594.0000   102      609.0000      594.0000    40894    2.46%
    310   290      594.0000    56      609.0000      594.0000    43958    2.46%
    336   313      594.0000    56      609.0000      594.0000    44636    2.46%
    378   299      594.0000    62      609.0000      594.0000    44475    2.46%
    401   354      594.0000    67      609.0000      594.0000    45826    2.46%
    420   359      594.0000    76      609.0000      594.0000    47139    2.46%
    429   398      594.0000    64      609.0000      594.0000    48597    2.46%
    448   426      594.0000    80      609.0000      594.0000    50468    2.46%
    465   437      594.0000    66      609.0000      594.0000    50785    2.46%
Elapsed time = 76.30 sec. (61135.60 ticks, tree = 216.87 MB, solutions = 1)
    494   467      594.0000    51      609.0000      594.0000    53127    2.46%
    515   468      594.0000    74      609.0000      594.0000    52122    2.46%
    544   512      594.0000    61      609.0000      594.0000    55963    2.46%
    557   525      594.0000    48      609.0000      594.0000    56724    2.46%
    574   542      594.0000    51      609.0000      594.0000    57330    2.46%
    593   564      594.6316   105      609.0000      594.0000    58001    2.46%
    601   574      594.7917   161      609.0000      594.0000    59089    2.46%
    609   582      597.2224   152      609.0000      594.0000    59852    2.46%
*   615   580      integral     0      601.0000      594.0000    60134    1.16%
Found incumbent of value 601.000000 after 86.42 sec. (70012.63 ticks)
    616   584      595.0000   128      601.0000      594.0000    62087    1.16%
    623   577      594.0000    70      601.0000      594.0000    63371    1.16%
Elapsed time = 87.17 sec. (71296.51 ticks, tree = 314.08 MB, solutions = 2)
    637   583      594.0000    56      601.0000      594.0000    63487    1.16%
    660   591      594.0000    79      601.0000      594.0000    65159    1.16%
    687   599      594.0000    91      601.0000      594.0000    66036    1.16%
    710   644      594.0000    59      601.0000      594.0000    68047    1.16%
                                                  ZeroHalf: 3                  
    736   628      594.0000    76      601.0000      594.0000    67234    1.16%
    768   674      594.0000    77      601.0000      594.0000    69126    1.16%
    798   691      594.0000    70      601.0000      594.0000    69716    1.16%
    829   732      594.0000   111      601.0000      594.0000    72246    1.16%
*   843+  773                          598.0000      594.0000             0.67%
Found incumbent of value 598.000000 after 95.76 sec. (79698.41 ticks)
    851   768      594.0000    62      598.0000      594.0000    72302    0.67%
    864   779      597.0000    72      598.0000      594.0000    72808    0.67%
Elapsed time = 97.40 sec. (81619.23 ticks, tree = 455.65 MB, solutions = 3)
    867   791      594.0000    47      598.0000      594.0000    74944    0.67%
*   878+  757                          594.0000      594.0000             0.00%
Found incumbent of value 594.000000 after 98.43 sec. (83641.81 ticks)
    878   796      595.5000    52      594.0000      594.0000    75396    0.00%
                                                  ZeroHalf: 1                  

Zero-half cuts applied:  37

Root node processing (before b&c):
  Real time             =   31.58 sec. (24591.41 ticks)
Parallel b&c, 2 threads:
  Real time             =   67.21 sec. (59997.64 ticks)
  Sync time (average)   =    4.11 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =   98.79 sec. (84589.05 ticks)
Objective Function Value: 594
User cuts 0
Total cuts 37
Optimization done in 98.8008 secs.
Status: Optimal
Objective Function Value: 594
f(5,17,16) = 1
f(20,16,17) = 1
f(45,16,17) = 1
f(48,17,16) = 1
f(19,16,15) = 1
f(29,15,16) = 1
f(45,15,16) = 1
f(45,14,15) = 1
f(1,13,17) = 1
f(5,13,17) = 1
f(6,17,13) = 1
f(7,17,13) = 1
f(17,17,13) = 1
f(20,17,13) = 1
f(48,13,17) = 1
f(49,17,13) = 1
f(2,15,13) = 1
f(16,15,13) = 1
f(29,13,15) = 1
f(32,15,13) = 1
f(42,13,15) = 1
f(50,13,15) = 1
f(3,14,12) = 1
f(9,12,14) = 1
f(13,14,12) = 1
f(33,14,12) = 1
f(38,12,14) = 1
f(40,14,12) = 1
f(41,14,12) = 1
f(7,13,11) = 1
f(17,13,11) = 1
f(20,13,11) = 1
f(32,13,11) = 1
f(42,11,13) = 1
f(47,11,13) = 1
f(3,12,11) = 1
f(4,12,11) = 1
f(8,12,11) = 1
f(9,11,12) = 1
f(15,12,11) = 1
f(24,12,11) = 1
f(30,11,12) = 1
f(33,12,11) = 1
f(36,11,12) = 1
f(38,11,12) = 1
f(41,12,11) = 1
f(44,12,11) = 1
f(1,10,13) = 1
f(5,10,13) = 1
f(16,13,10) = 1
f(22,10,13) = 1
f(29,10,13) = 1
f(31,10,13) = 1
f(46,13,10) = 1
f(48,10,13) = 1
f(49,13,10) = 1
f(50,10,13) = 1
f(4,11,10) = 1
f(28,11,10) = 1
f(30,10,11) = 1
f(33,11,10) = 1
f(36,10,11) = 1
f(7,11,8) = 1
f(8,11,8) = 1
f(15,11,8) = 1
f(17,11,8) = 1
f(18,11,8) = 1
f(20,11,8) = 1
f(25,11,8) = 1
f(38,8,11) = 1
f(42,8,11) = 1
f(44,11,8) = 1
f(47,8,11) = 1
f(8,8,9) = 1
f(18,8,9) = 1
f(25,8,9) = 1
f(34,9,8) = 1
f(7,8,7) = 1
f(17,8,7) = 1
f(20,8,7) = 1
f(27,8,7) = 1
f(44,8,7) = 1
f(47,7,8) = 1
f(1,6,9) = 1
f(12,6,9) = 1
f(14,6,9) = 1
f(22,6,9) = 1
f(25,9,6) = 1
f(34,6,9) = 1
f(12,7,6) = 1
f(14,7,6) = 1
f(17,7,6) = 1
f(27,7,6) = 1
f(44,7,6) = 1
f(3,11,5) = 1
f(11,5,11) = 1
f(23,5,11) = 1
f(24,11,5) = 1
f(32,11,5) = 1
f(37,11,5) = 1
f(39,5,11) = 1
f(41,11,5) = 1
f(1,5,10) = 1
f(16,10,5) = 1
f(22,5,10) = 1
f(29,5,10) = 1
f(31,5,10) = 1
f(35,5,10) = 1
f(46,10,5) = 1
f(48,5,10) = 1
f(49,10,5) = 1
f(50,5,10) = 1
f(1,9,5) = 1
f(3,5,9) = 1
f(14,9,5) = 1
f(22,9,5) = 1
f(26,9,5) = 1
f(31,9,5) = 1
f(35,9,5) = 1
f(37,5,9) = 1
f(39,9,5) = 1
f(46,5,9) = 1
f(10,10,4) = 1
f(28,10,4) = 1
f(30,4,10) = 1
f(33,10,4) = 1
f(36,4,10) = 1
f(11,3,5) = 1
f(14,5,3) = 1
f(16,5,3) = 1
f(41,5,2) = 1
f(49,5,2) = 1
f(10,4,2) = 1
f(43,2,4) = 1
f(43,3,2) = 1
f(3,9,1) = 1
f(12,9,1) = 1
f(21,9,1) = 1
f(26,1,9) = 1
f(31,1,9) = 1
f(39,1,9) = 1
f(12,1,3) = 1
f(16,3,1) = 1
f(21,1,3) = 1
f(43,1,3) = 1
c(25,3) = 1
c(43,3) = 1
c(3,4) = 1
c(29,4) = 1
c(17,6) = 1
c(24,7) = 1
c(2,9) = 1
c(6,10) = 1
c(19,10) = 1
c(46,12) = 1
c(47,12) = 1
c(41,13) = 1
c(14,15) = 1
c(28,16) = 1
c(48,18) = 1
c(9,19) = 1
c(27,19) = 1
c(39,19) = 1
c(42,19) = 1
c(34,21) = 1
c(15,22) = 1
c(13,23) = 1
c(45,24) = 1
c(44,25) = 1
c(16,26) = 1
c(5,29) = 1
c(18,29) = 1
c(36,29) = 1
c(12,30) = 1
c(23,31) = 1
c(35,31) = 1
c(33,32) = 1
c(20,36) = 1
c(30,36) = 1
c(50,36) = 1
c(21,37) = 1
c(37,37) = 1
c(38,39) = 1
c(1,40) = 1
c(10,40) = 1
c(26,43) = 1
c(11,44) = 1
c(49,44) = 1
c(40,45) = 1
c(8,46) = 1
c(22,47) = 1
c(32,47) = 1
c(4,50) = 1
c(7,50) = 1
c(31,50) = 1
z(1,3) = 1
z(1,5) = 1
z(1,6) = 1
z(1,7) = 1
z(1,12) = 1
z(1,14) = 1
z(1,16) = 1
z(1,17) = 1
z(1,20) = 1
z(1,21) = 1
z(1,22) = 1
z(1,25) = 1
z(1,26) = 1
z(1,27) = 1
z(1,29) = 1
z(1,31) = 1
z(1,34) = 1
z(1,35) = 1
z(1,37) = 1
z(1,39) = 1
z(1,44) = 1
z(1,46) = 1
z(1,48) = 1
z(1,49) = 1
z(1,50) = 1
z(2,16) = 1
z(2,29) = 1
z(2,32) = 1
z(2,42) = 1
z(2,50) = 1
z(3,4) = 1
z(3,8) = 1
z(3,9) = 1
z(3,11) = 1
z(3,12) = 1
z(3,13) = 1
z(3,14) = 1
z(3,15) = 1
z(3,16) = 1
z(3,20) = 1
z(3,21) = 1
z(3,22) = 1
z(3,23) = 1
z(3,24) = 1
z(3,26) = 1
z(3,30) = 1
z(3,31) = 1
z(3,32) = 1
z(3,33) = 1
z(3,35) = 1
z(3,36) = 1
z(3,37) = 1
z(3,38) = 1
z(3,39) = 1
z(3,40) = 1
z(3,41) = 1
z(3,42) = 1
z(3,44) = 1
z(3,46) = 1
z(3,47) = 1
z(4,8) = 1
z(4,9) = 1
z(4,15) = 1
z(4,24) = 1
z(4,28) = 1
z(4,30) = 1
z(4,33) = 1
z(4,36) = 1
z(4,38) = 1
z(4,41) = 1
z(4,44) = 1
z(5,6) = 1
z(5,7) = 1
z(5,16) = 1
z(5,17) = 1
z(5,20) = 1
z(5,22) = 1
z(5,29) = 1
z(5,31) = 1
z(5,45) = 1
z(5,46) = 1
z(5,48) = 1
z(5,49) = 1
z(5,50) = 1
z(6,7) = 1
z(6,17) = 1
z(6,20) = 1
z(6,29) = 1
z(6,48) = 1
z(6,49) = 1
z(7,8) = 1
z(7,12) = 1
z(7,14) = 1
z(7,15) = 1
z(7,17) = 1
z(7,18) = 1
z(7,20) = 1
z(7,25) = 1
z(7,27) = 1
z(7,32) = 1
z(7,38) = 1
z(7,39) = 1
z(7,42) = 1
z(7,44) = 1
z(7,47) = 1
z(7,48) = 1
z(7,49) = 1
z(8,9) = 1
z(8,15) = 1
z(8,17) = 1
z(8,18) = 1
z(8,20) = 1
z(8,24) = 1
z(8,25) = 1
z(8,30) = 1
z(8,33) = 1
z(8,34) = 1
z(8,36) = 1
z(8,38) = 1
z(8,41) = 1
z(8,42) = 1
z(8,44) = 1
z(8,47) = 1
z(9,13) = 1
z(9,15) = 1
z(9,24) = 1
z(9,30) = 1
z(9,33) = 1
z(9,36) = 1
z(9,38) = 1
z(9,40) = 1
z(9,41) = 1
z(9,44) = 1
z(10,28) = 1
z(10,30) = 1
z(10,33) = 1
z(10,36) = 1
z(10,43) = 1
z(11,14) = 1
z(11,16) = 1
z(11,23) = 1
z(11,24) = 1
z(11,32) = 1
z(11,37) = 1
z(11,39) = 1
z(11,41) = 1
z(11,50) = 1
z(12,14) = 1
z(12,16) = 1
z(12,17) = 1
z(12,20) = 1
z(12,21) = 1
z(12,22) = 1
z(12,25) = 1
z(12,26) = 1
z(12,27) = 1
z(12,31) = 1
z(12,34) = 1
z(12,39) = 1
z(12,43) = 1
z(12,44) = 1
z(13,33) = 1
z(13,38) = 1
z(13,40) = 1
z(13,41) = 1
z(14,16) = 1
z(14,17) = 1
z(14,18) = 1
z(14,20) = 1
z(14,21) = 1
z(14,22) = 1
z(14,25) = 1
z(14,26) = 1
z(14,27) = 1
z(14,31) = 1
z(14,34) = 1
z(14,35) = 1
z(14,37) = 1
z(14,39) = 1
z(14,44) = 1
z(14,46) = 1
z(15,17) = 1
z(15,18) = 1
z(15,20) = 1
z(15,24) = 1
z(15,25) = 1
z(15,30) = 1
z(15,33) = 1
z(15,36) = 1
z(15,37) = 1
z(15,38) = 1
z(15,41) = 1
z(15,42) = 1
z(15,44) = 1
z(15,47) = 1
z(16,17) = 1
z(16,21) = 1
z(16,22) = 1
z(16,25) = 1
z(16,26) = 1
z(16,29) = 1
z(16,31) = 1
z(16,32) = 1
z(16,35) = 1
z(16,39) = 1
z(16,42) = 1
z(16,43) = 1
z(16,46) = 1
z(16,48) = 1
z(16,49) = 1
z(16,50) = 1
z(17,18) = 1
z(17,20) = 1
z(17,21) = 1
z(17,22) = 1
z(17,25) = 1
z(17,26) = 1
z(17,27) = 1
z(17,31) = 1
z(17,32) = 1
z(17,34) = 1
z(17,38) = 1
z(17,39) = 1
z(17,42) = 1
z(17,44) = 1
z(17,46) = 1
z(17,47) = 1
z(17,48) = 1
z(17,49) = 1
z(18,20) = 1
z(18,25) = 1
z(18,31) = 1
z(18,34) = 1
z(18,37) = 1
z(18,38) = 1
z(18,39) = 1
z(18,42) = 1
z(18,44) = 1
z(18,47) = 1
z(19,29) = 1
z(19,45) = 1
z(19,48) = 1
z(20,25) = 1
z(20,27) = 1
z(20,31) = 1
z(20,32) = 1
z(20,34) = 1
z(20,38) = 1
z(20,39) = 1
z(20,42) = 1
z(20,44) = 1
z(20,45) = 1
z(20,47) = 1
z(20,48) = 1
z(20,49) = 1
z(21,22) = 1
z(21,25) = 1
z(21,26) = 1
z(21,31) = 1
z(21,35) = 1
z(21,39) = 1
z(21,43) = 1
z(21,46) = 1
z(22,25) = 1
z(22,26) = 1
z(22,29) = 1
z(22,31) = 1
z(22,34) = 1
z(22,35) = 1
z(22,37) = 1
z(22,39) = 1
z(22,44) = 1
z(22,46) = 1
z(22,48) = 1
z(22,49) = 1
z(22,50) = 1
z(23,24) = 1
z(23,25) = 1
z(23,32) = 1
z(23,37) = 1
z(23,39) = 1
z(23,41) = 1
z(23,50) = 1
z(24,25) = 1
z(24,30) = 1
z(24,32) = 1
z(24,33) = 1
z(24,36) = 1
z(24,37) = 1
z(24,38) = 1
z(24,39) = 1
z(24,41) = 1
z(24,44) = 1
z(24,50) = 1
z(25,26) = 1
z(25,31) = 1
z(25,34) = 1
z(25,37) = 1
z(25,38) = 1
z(25,39) = 1
z(25,41) = 1
z(25,42) = 1
z(25,44) = 1
z(25,46) = 1
z(25,47) = 1
z(25,50) = 1
z(26,31) = 1
z(26,35) = 1
z(26,37) = 1
z(26,39) = 1
z(26,43) = 1
z(26,46) = 1
z(27,37) = 1
z(27,44) = 1
z(27,47) = 1
z(28,30) = 1
z(28,33) = 1
z(28,36) = 1
z(29,31) = 1
z(29,32) = 1
z(29,35) = 1
z(29,42) = 1
z(29,45) = 1
z(29,46) = 1
z(29,48) = 1
z(29,49) = 1
z(29,50) = 1
z(30,33) = 1
z(30,36) = 1
z(30,38) = 1
z(30,41) = 1
z(30,44) = 1
z(31,35) = 1
z(31,37) = 1
z(31,38) = 1
z(31,39) = 1
z(31,44) = 1
z(31,46) = 1
z(31,48) = 1
z(31,49) = 1
z(31,50) = 1
z(32,37) = 1
z(32,39) = 1
z(32,41) = 1
z(32,42) = 1
z(32,47) = 1
z(32,49) = 1
z(32,50) = 1
z(33,36) = 1
z(33,38) = 1
z(33,40) = 1
z(33,41) = 1
z(33,44) = 1
z(33,50) = 1
z(34,44) = 1
z(35,37) = 1
z(35,39) = 1
z(35,46) = 1
z(35,48) = 1
z(35,49) = 1
z(35,50) = 1
z(36,38) = 1
z(36,41) = 1
z(36,44) = 1
z(36,50) = 1
z(37,39) = 1
z(37,41) = 1
z(37,42) = 1
z(37,44) = 1
z(37,46) = 1
z(37,47) = 1
z(38,40) = 1
z(38,41) = 1
z(38,42) = 1
z(38,44) = 1
z(38,47) = 1
z(39,41) = 1
z(39,43) = 1
z(39,44) = 1
z(39,46) = 1
z(39,50) = 1
z(40,41) = 1
z(41,44) = 1
z(41,49) = 1
z(41,50) = 1
z(42,44) = 1
z(42,47) = 1
z(42,50) = 1
z(44,47) = 1
z(44,50) = 1
z(45,48) = 1
z(45,50) = 1
z(46,48) = 1
z(46,49) = 1
z(46,50) = 1
z(47,50) = 1
z(48,49) = 1
z(48,50) = 1
z(49,50) = 1
maxSlice(25) = 50
maxSlice(24) = 50
maxSlice(23) = 50
maxSlice(22) = 50
maxSlice(21) = 50
maxSlice(20) = 50
maxSlice(19) = 50
maxSlice(18) = 50
maxSlice(17) = 50
maxSlice(16) = 50
maxSlice(15) = 50
maxSlice(14) = 50
maxSlice(13) = 50
maxSlice(12) = 50
maxSlice(11) = 50
maxSlice(10) = 50
maxSlice(9) = 50
maxSlice(8) = 50
maxSlice(7) = 50
maxSlice(6) = 50
maxSlice(5) = 50
maxSlice(4) = 50
maxSlice(3) = 50
maxSlice(2) = 50
maxSlice(1) = 50
maxSlice(0) = 50
maxSliceOverall = 50
C(1) = 1
C(2) = 1
C(3) = 1
C(4) = 1
C(5) = 1
C(6) = 1
C(7) = 1
C(8) = 1
C(9) = 1
C(10) = 1
C(11) = 1
C(12) = 1
C(13) = 1
C(14) = 1
C(15) = 1
C(16) = 1
C(17) = 1
C(18) = 1
C(19) = 1
C(20) = 1
C(21) = 1
C(22) = 1
C(23) = 1
C(24) = 1
C(25) = 1
C(26) = 1
C(27) = 1
C(28) = 1
C(29) = 1
C(30) = 1
C(31) = 1
C(32) = 1
C(33) = 1
C(34) = 1
C(35) = 1
C(36) = 1
C(37) = 1
C(38) = 1
C(39) = 1
C(40) = 1
C(41) = 1
C(42) = 1
C(43) = 1
C(44) = 1
C(45) = 1
C(46) = 1
C(47) = 1
C(48) = 1
C(49) = 1
C(50) = 1
 Time: 98.8008

Update RSA
Feasible

--- Slice occupation ---
#1. 1-3. ***-----------------**********----***-------------
#2. 1-9. ****------------***-------****----***---***----***
#3. 2-3. ***-----------------------------------------------
#4. 2-4. ***----------------------------------***----------
#5. 2-5. -------******---------------------------****------
#6. 3-5. ------------***-----******------------******------
#7. 4-5. --------------------------------------------------
#8. 4-10. ------------****---------***********-***----------
#9. 5-9. ****--*********-***---------***************-******
#10. 5-10. ****--************--******--***-****-*************
#11. 5-11. *************---***------************-*********---
#12. 6-7. ---***------*******---***-****--------------------
#13. 6-9. ***---------*********-----****-------***----***---
#14. 7-8. ---*********---****---***-----******-----------***
#15. 8-9. ***------------******----****-----------******----
#16. 8-11. ************-****************-*********-******-***
#17. 10-11. ------------****---------***********----------****
#18. 10-13. ****--************--*********---****-*************
#19. 11-12. ***************************************-**********
#20. 11-13. ---*********-******-----------******--------******
#21. 12-14. ****---****************------***----*********-----
#22. 13-15. ****--***----******-******------****--------***---
#23. 13-17. ---***-***--******--------***-******-*******---***
#24. 14-15. --------------------****--------------------------
#25. 15-16. ****--****----------****--------------------------
#26. 16-17. ------------******--****--***-******--------------

For demand 1 : 
(13--17, 40)
(6--9, 40)
(10--13, 40)
(5--10, 40)
(9--5, 40)

For demand 2 : 
(15--13, 9)

For demand 3 : 
(14--12, 4)
(12--11, 4)
(11--5, 4)
(5--9, 4)
(9--1, 4)

For demand 4 : 
(12--11, 50)
(11--10, 50)

For demand 5 : 
(17--16, 29)
(13--17, 29)
(10--13, 29)

For demand 6 : 
(17--13, 10)

For demand 7 : 
(17--13, 50)
(13--11, 50)
(8--7, 50)
(11--8, 50)

For demand 8 : 
(12--11, 46)
(8--9, 46)
(11--8, 46)

For demand 9 : 
(12--14, 19)
(11--12, 19)

For demand 10 : 
(10--4, 40)
(4--2, 40)

For demand 11 : 
(5--11, 44)
(3--5, 44)

For demand 12 : 
(7--6, 30)
(6--9, 30)
(9--1, 30)
(1--3, 30)

For demand 13 : 
(14--12, 23)

For demand 14 : 
(7--6, 15)
(6--9, 15)
(5--3, 15)
(9--5, 15)

For demand 15 : 
(12--11, 22)
(11--8, 22)

For demand 16 : 
(15--13, 26)
(13--10, 26)
(10--5, 26)
(5--3, 26)
(3--1, 26)

For demand 17 : 
(17--13, 6)
(13--11, 6)
(8--7, 6)
(7--6, 6)
(11--8, 6)

For demand 18 : 
(8--9, 29)
(11--8, 29)

For demand 19 : 
(16--15, 10)

For demand 20 : 
(16--17, 36)
(17--13, 36)
(13--11, 36)
(8--7, 36)
(11--8, 36)

For demand 21 : 
(9--1, 37)
(1--3, 37)

For demand 22 : 
(6--9, 47)
(10--13, 47)
(5--10, 47)
(9--5, 47)

For demand 23 : 
(5--11, 31)

For demand 24 : 
(12--11, 7)
(11--5, 7)

For demand 25 : 
(8--9, 3)
(11--8, 3)
(9--6, 3)

For demand 26 : 
(9--5, 43)
(1--9, 43)

For demand 27 : 
(8--7, 19)
(7--6, 19)

For demand 28 : 
(11--10, 16)
(10--4, 16)

For demand 29 : 
(15--16, 4)
(13--15, 4)
(10--13, 4)
(5--10, 4)

For demand 30 : 
(11--12, 36)
(10--11, 36)
(4--10, 36)

For demand 31 : 
(10--13, 50)
(5--10, 50)
(9--5, 50)
(1--9, 50)

For demand 32 : 
(15--13, 47)
(13--11, 47)
(11--5, 47)

For demand 33 : 
(14--12, 32)
(12--11, 32)
(11--10, 32)
(10--4, 32)

For demand 34 : 
(6--9, 21)
(9--8, 21)

For demand 35 : 
(5--10, 31)
(9--5, 31)

For demand 36 : 
(11--12, 29)
(10--11, 29)
(4--10, 29)

For demand 37 : 
(11--5, 37)
(5--9, 37)

For demand 38 : 
(12--14, 39)
(8--11, 39)
(11--12, 39)

For demand 39 : 
(5--11, 19)
(9--5, 19)
(1--9, 19)

For demand 40 : 
(14--12, 45)

For demand 41 : 
(14--12, 13)
(12--11, 13)
(11--5, 13)
(5--2, 13)

For demand 42 : 
(13--15, 19)
(8--11, 19)
(11--13, 19)

For demand 43 : 
(2--4, 3)
(1--3, 3)
(3--2, 3)

For demand 44 : 
(12--11, 25)
(8--7, 25)
(7--6, 25)
(11--8, 25)

For demand 45 : 
(16--17, 24)
(15--16, 24)
(14--15, 24)

For demand 46 : 
(13--10, 12)
(10--5, 12)
(5--9, 12)

For demand 47 : 
(8--11, 12)
(7--8, 12)
(11--13, 12)

For demand 48 : 
(17--16, 18)
(13--17, 18)
(10--13, 18)
(5--10, 18)

For demand 49 : 
(17--13, 44)
(13--10, 44)
(10--5, 44)
(5--2, 44)

For demand 50 : 
(13--15, 36)
(10--13, 36)
(5--10, 36)

Displaying OSNR 
For demand 1 : 19.0262 x 13 limit
For demand 2 : 24.1809 x 15 limit
For demand 3 : 19.811 x 16 limit
For demand 4 : 22.5746 x 16 limit
For demand 5 : 20.618 x 13 limit
For demand 6 : 24.7702 x 15 limit
For demand 7 : 20.0601 x 13 limit
For demand 8 : 24.4413 x 21 limit
For demand 9 : 26.0897 x 16 limit
For demand 10 : 21.7609 x 13 limit
For demand 11 : 24.7738 x 16 limit
For demand 12 : 21.1281 x 16 limit
For demand 13 : 26.4581 x 16 limit
For demand 14 : 20.7647 x 13 limit
For demand 15 : 22.5724 x 22 limit
For demand 16 : 21.5737 x 21 limit
For demand 17 : 19.4685 x 13 limit
For demand 18 : 24.0184 x 16 limit
For demand 19 : 26.4987 x 16 limit
For demand 20 : 22.1152 x 16 limit
For demand 21 : 21.3099 x 15 limit
For demand 22 : 19.7794 x 13 limit
For demand 23 : 26.3267 x 21 limit
For demand 24 : 21.8264 x 15 limit
For demand 25 : 21.7177 x 15 limit
For demand 26 : 21.5312 x 13 limit
For demand 27 : 24.9635 x 16 limit
For demand 28 : 22.3521 x 16 limit
For demand 29 : 20.8195 x 16 limit
For demand 30 : 21.3975 x 16 limit
For demand 31 : 18.9941 x 15 limit
For demand 32 : 20.0382 x 13 limit
For demand 33 : 19.455 x 15 limit
For demand 34 : 26.525 x 21 limit
For demand 35 : 22.1042 x 13 limit
For demand 36 : 21.3975 x 16 limit
For demand 37 : 24.6764 x 21 limit
For demand 38 : 21.4251 x 13 limit
For demand 39 : 19.8519 x 15 limit
For demand 40 : 28.2191 x 16 limit
For demand 41 : 22.7019 x 16 limit
For demand 42 : 23.5281 x 21 limit
For demand 43 : 20.5557 x 15 limit
For demand 44 : 20.7362 x 15 limit
For demand 45 : 22.5902 x 16 limit
For demand 46 : 23.4326 x 21 limit
For demand 47 : 24.0505 x 21 limit
For demand 48 : 22.465 x 16 limit
For demand 49 : 20.6771 x 16 limit
For demand 50 : 21.5198 x 16 limit
Extra OSNR in routing: 316.672
Time taken by iteration is : 99.929765 sec
UB: 594.000000000
LB: 594.000000000
GAP: 0.000000000
Tree size: 885
Time: 98.800809860


--- The Demands ---
#1. 6 -- 17. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#2. 15 -- 13. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#3. 14 -- 1. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#4. 12 -- 10. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#5. 10 -- 16. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#6. 17 -- 13. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#7. 17 -- 7. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#8. 12 -- 9. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#9. 11 -- 14. nbSlices: 6, maxLength: 2500.000000000, osnrLimit: 16.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#10. 10 -- 2. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#11. 3 -- 11. nbSlices: 6, maxLength: 2500.000000000, osnrLimit: 16.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#12. 7 -- 3. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#13. 14 -- 12. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#14. 7 -- 3. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#15. 12 -- 8. nbSlices: 3, maxLength: 500.000000000, osnrLimit: 22.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#16. 15 -- 1. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#17. 17 -- 6. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#18. 11 -- 9. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#19. 16 -- 15. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#20. 16 -- 7. nbSlices: 6, maxLength: 2500.000000000, osnrLimit: 16.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#21. 9 -- 3. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#22. 6 -- 13. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#23. 5 -- 11. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#24. 12 -- 5. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#25. 11 -- 6. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#26. 1 -- 5. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#27. 8 -- 6. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#28. 11 -- 4. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#29. 5 -- 16. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#30. 4 -- 12. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#31. 1 -- 13. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#32. 15 -- 5. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#33. 14 -- 4. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#34. 6 -- 8. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#35. 9 -- 10. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#36. 4 -- 12. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#37. 11 -- 9. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#38. 8 -- 14. nbSlices: 3, maxLength: 5000.000000000, osnrLimit: 13.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#39. 1 -- 11. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#40. 14 -- 12. nbSlices: 6, maxLength: 2500.000000000, osnrLimit: 16.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#41. 14 -- 2. nbSlices: 6, maxLength: 2500.000000000, osnrLimit: 16.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#42. 8 -- 15. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#43. 1 -- 4. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#44. 12 -- 6. nbSlices: 3, maxLength: 2000.000000000, osnrLimit: 15.000000000, pchC: 0.000375000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#45. 14 -- 17. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#46. 13 -- 9. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#47. 7 -- 13. nbSlices: 6, maxLength: 2000.000000000, osnrLimit: 21.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#48. 5 -- 16. nbSlices: 6, maxLength: 2500.000000000, osnrLimit: 16.000000000, pchC: 0.000750000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#49. 17 -- 2. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES
#50. 5 -- 15. nbSlices: 4, maxLength: 1000.000000000, osnrLimit: 16.000000000, pchC: 0.000500000, pchL: 0.000000000, pchS: 0.000000000, ROUTED: YES

Time taken by optimization is : 99.930787624 sec
Total time taken by program is : 99.931069427 sec
